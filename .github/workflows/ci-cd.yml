name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java SDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run test cases
        run: mvn -B test -DtrimStackTrace=true

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java SDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR file
        run: mvn -q package -DskipTests

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello-jar
          path: target/hello-world-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: hello-jar

      - name: Create target directory on EC2 (clean old)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            if [ -d "/home/ubuntu/spring_boot_application/" ]; then
              echo "Directory exists. Cleaning up..."
              rm -rf /home/ubuntu/spring_boot_application/*
            else
              echo "Directory not found. Creating it..."
              mkdir -p /home/ubuntu/spring_boot_application/
            fi
            ls -l /home/ubuntu/spring_boot_application/

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "hello-world-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/spring_boot_application/"

      - name: Run JAR on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            echo "Killing any existing Java processes"
            pkill -f 'java -jar' || true
      
            echo "Starting Spring Boot app in background"
            cd /home/ubuntu/spring_boot_application
            nohup java -jar hello-world-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
      
            echo "Waiting for app to start..."
            sleep 20
      
            echo "Checking health endpoint..."
            curl -f http://localhost:8080/health
